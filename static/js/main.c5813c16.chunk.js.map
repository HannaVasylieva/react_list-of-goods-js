{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FEILD_ALPH","SORT_FEILD_LENGTH","App","useState","sortFeild","setSortFeild","sortReverse","setSortReverse","finalGoods","goods","toDo","direction","prepearedGoods","reverse","sort","good1","good2","length","localeCompare","getPrepearedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SAqCnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EAtCR,SAA2BC,EAAOC,EAAMC,GACtC,IAAMC,EAAc,YAAOH,GAE3B,OAAKC,GAAQC,EACJC,EAAeC,WAGpBH,GACFE,EAAeE,MAAK,SAACC,EAAOC,GAC1B,OAAQN,GACN,KAAKT,EACH,OAAIc,EAAME,SAAWD,EAAMC,OACjBN,EACJK,EAAMC,OAASF,EAAME,OACrBF,EAAME,OAASD,EAAMC,OAGnBN,EACJK,EAAME,cAAcH,GACpBA,EAAMG,cAAcF,GAE1B,KAAKhB,EACH,OAAQW,EACJK,EAAME,cAAcH,GACpBA,EAAMG,cAAcF,GAE1B,QACE,OAAO,MAKRJ,GAMYO,CAAkBpB,EAAiBK,EAAWE,GAEjE,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAcJ,IAE9BuB,QAAS,WACPlB,EAAaL,IARjB,iCAcA,wBACEqB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAcH,IAE9BsB,QAAS,WACPlB,EAAaJ,IARjB,4BAcA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,WACPhB,GAAgBD,IARpB,sBAcgB,KAAdF,GAAoBE,IACpB,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAa,IACbE,GAAe,IALnB,sBAaJ,6BACGC,EAAWgB,KAAI,SAAAC,GAAI,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCzHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c5813c16.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FEILD_ALPH = 'alph';\nconst SORT_FEILD_LENGTH = 'length';\n\nfunction getPrepearedGoods(goods, toDo, direction) {\n  const prepearedGoods = [...goods];\n\n  if (!toDo && direction) {\n    return prepearedGoods.reverse();\n  }\n\n  if (toDo) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (toDo) {\n        case SORT_FEILD_LENGTH:\n          if (good1.length !== good2.length) {\n            return (direction)\n              ? good2.length - good1.length\n              : good1.length - good2.length;\n          }\n\n          return (direction)\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        case SORT_FEILD_ALPH:\n          return (direction)\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortFeild, setSortFeild] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n  const finalGoods = getPrepearedGoods(goodsFromServer, sortFeild, sortReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortFeild !== SORT_FEILD_ALPH },\n          )}\n          onClick={() => {\n            setSortFeild(SORT_FEILD_ALPH);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortFeild !== SORT_FEILD_LENGTH },\n          )}\n          onClick={() => {\n            setSortFeild(SORT_FEILD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !sortReverse },\n          )}\n          onClick={() => {\n            setSortReverse(!sortReverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortFeild !== '' || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortFeild('');\n              setSortReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {finalGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}